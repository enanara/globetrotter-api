service: globetrotter-backend

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x

functions:
  countries:
    handler: handler.globeTrotterApp
    events:
      - http:
          method: get 
          path: user/{id}
          cors: true
      - http:
          method: put 
          path: user/{id}
          cors: true
      - http:
          method: post 
          path: user
          cors: true
      - http:
          method: delete 
          path: user/{id}
          cors: true
      - http:
          method: get 
          path: visited
          cors: true
      - http:
          method: put 
          path: visited/{id}
          cors: true
      - http:
          method: post 
          path: visited
          cors: true
      - http:
          method: delete 
          path: visited/{id}
          cors: true
      - http:
          method: get 
          path: bucketlist
          cors: true
      - http:
          method: put 
          path: bucketlist/{id}
          cors: true
      - http:
          method: post 
          path: bucketlist
          cors: true
      - http:
          method: delete 
          path: bucketlist/{id}
          cors: true

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**



#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
